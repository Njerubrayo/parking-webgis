# Generated by Django 5.2.4 on 2025-10-02 08:23

import django.contrib.gis.db.models.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ParkingLot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('slot_no', models.CharField(db_column='Slot_No', max_length=100)),
                ('status', models.CharField(blank=True, db_column='Status', max_length=50, null=True)),
                ('vehicle', models.CharField(blank=True, db_column='Vehicle', max_length=100, null=True)),
                ('lot_id', models.CharField(db_column='Lot_ID', max_length=300)),
                ('road_name', models.CharField(db_column='Road_Name', max_length=255)),
                ('lot_type', models.CharField(blank=True, db_column='Lot_type', max_length=50, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(db_column='geom', srid=4326)),
            ],
            options={
                'db_table': 'parking_lots',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(choices=[('PRIVATE', 'PRIVATE'), ('PICKUP', 'PICKUP'), ('MOTORBIKE', 'MOTORBIKE'), ('TUKTUK', 'TUKTUK'), ('CANTER', 'CANTER'), ('TAXI', 'TAXI'), ('LORRY', 'LORRY'), ('MINIBUS', 'MINIBUS'), ('TRAILER', 'TRAILER')], default='PRIVATE', max_length=20)),
                ('vehicle_reg', models.CharField(max_length=20)),
                ('phone_number', models.CharField(max_length=20)),
                ('booked_at', models.DateTimeField(auto_now_add=True)),
                ('duration_minutes', models.PositiveIntegerField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('arrived', 'Arrived'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='active', max_length=10)),
                ('amount_due', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('paid', 'Paid'), ('failed', 'Failed')], default='pending', max_length=16)),
                ('mpesa_receipt', models.CharField(blank=True, default='', max_length=64)),
                ('merchant_request_id', models.CharField(blank=True, default='', max_length=64)),
                ('checkout_request_id', models.CharField(blank=True, default='', max_length=64)),
                ('arrived_at', models.DateTimeField(blank=True, null=True)),
                ('slot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.parkinglot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookingEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='parking.booking')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'User'), ('staff', 'Staff'), ('admin', 'Admin')], default='user', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]

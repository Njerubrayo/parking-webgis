
"""
Django settings for parking_system project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

from environ import Env

env = Env()
Env.read_env()

# Get environment type (default = production)
#ENVIRONMENT = env("ENVIRONMENT", default="production")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Daraja sandbox settings
#DARAJA_ENV = env('DARAJA_ENV', default='sandbox')
#DARAJA_CONSUMER_KEY = env('DARAJA_CONSUMER_KEY')
#DARAJA_CONSUMER_SECRET = env('DARAJA_CONSUMER_SECRET')
#DARAJA_SHORTCODE = env('DARAJA_SHORTCODE', default='174379')
#DARAJA_PASSKEY = env('DARAJA_PASSKEY')
#DARAJA_CALLBACK_HOST = env('DARAJA_CALLBACK_HOST', default='http://127.0.0.1:9000')
#RATE_PER_MINUTE_KES = env.float('RATE_PER_MINUTE_KES', default=5)

# Sandbox endpoints
#DARAJA_BASE = 'https://sandbox.safaricom.co.ke'
#DARAJA_OAUTH_URL = f'{DARAJA_BASE}/oauth/v1/generate?grant_type=client_credentials'
#DARAJA_STK_URL = f'{DARAJA_BASE}/mpesa/stkpush/v1/processrequest'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

 
#SECRET_KEY = env('SECRET_KEY')
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#v+^@d4r)rzutjy6hi_cy_$rzk45%p%-*o(i9t5-2-h_(5$$(d'
#SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!

# Toggle debug based on environment
#if ENVIRONMENT == "development":
  #  DEBUG = True
#else:
    #DEBUG = False

DEBUG = True

ALLOWED_HOSTS = ['.fly.dev', 'localhost', '127.0.0.1']

CSRF_TRUSTED_ORIGINS = ['https://parkingsystem.fly.dev']



INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'parking',            # Your app
    'rest_framework',     # API support
    'rest_framework_gis',
    'django.contrib.gis', # GeoDjango support
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'parking_system.middleware.NoCacheForAuthMiddleware',
]

ROOT_URLCONF = 'parking_system.urls'

TEMPLATES = [
    {     
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'parking_system.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.contrib.gis.db.backends.postgis',
#        'NAME': 'parking_db',          # database name from pgAdmin
#        'USER': 'postgres',            # your pgAdmin username
#        'PASSWORD':  '18324252', #'Galuka1#',   # your pgAdmin password
#        'HOST': 'localhost',
#        'PORT': '5432',
#    }
#}


# Default local PostGIS
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': env('DB_NAME', default='parking_db'),
        'USER': env('DB_USER', default='postgres'),
        'PASSWORD': env('DB_PASSWORD', default='18324252'),
        'HOST': env('DB_HOST', default='localhost'),
        'PORT': env('DB_PORT', default='5432'),
    }
}

#POSTGRES_LOCALLY = env.bool('POSTGRES_LOCALLY', default=False)

# Use Railway PostgreSQL if in production OR testing PostgreSQL locally
#if ENVIRONMENT == 'production' or POSTGRES_LOCALLY:
   # DATABASES['default'] = dj_database_url.parse(env('DATABASE_URL'), conn_max_age=600, ssl_require=False)


# Configure GDAL paths (update these with the paths found by the script)
import os
import platform
#s.environ['PROJ_LIB'] = r'E:\NJERU\project\ParkingSystem\env310\Lib\site-packages\osgeo\data\proj'
#GDAL_LIBRARY_PATH = r'E:\NJERU\project\ParkingSystem\env310\Lib\site-packages\osgeo\gdal.dll'  # Windows example
#GEOS_LIBRARY_PATH = r'E:\NJERU\project\ParkingSystem\env310\Lib\site-packages\osgeo\geos_c.dll'  # If using GEOS

# Configure GDAL/GEOS paths differently for Windows vs Linux
if platform.system() == "Windows":
    os.environ['PROJ_LIB'] = r'E:\NJERU\project\ParkingSystem\env310\Lib\site-packages\osgeo\data\proj'
    GDAL_LIBRARY_PATH = r'E:\NJERU\project\ParkingSystem\env310\Lib\site-packages\osgeo\gdal.dll'
    GEOS_LIBRARY_PATH = r'E:\NJERU\project\ParkingSystem\env310\Lib\site-packages\osgeo\geos_c.dll'
else:
    os.environ['PROJ_LIB'] = '/usr/share/proj'
    GDAL_LIBRARY_PATH = '/usr/lib/x86_64-linux-gnu/libgdal.so.36'
    GEOS_LIBRARY_PATH = '/usr/lib/x86_64-linux-gnu/libgeos_c.so'
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Nairobi'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
# Extra places Django will look for static files
STATICFILES_DIRS = [
    BASE_DIR / 'parking' / 'static',
]
# Enable WhiteNoise compression and caching
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ]
}
LOGIN_URL = '/login/'
